#1~P P명
# ===== 구성
# NxN 격자, 위치= (r,c)
# M회 턴 턴마다 루돌프 1 , 산타들(1~P)  한번씩 움직임
# 두 위치 r1,c1 / r2,c2 사이의 거리는 (r1-r2)^2 + (c1-c2)^2

#루돌프 
# 가장 가까운 산타(탈락하지 않은) 를 향해 1칸 돌진, 
# 거리가 같은 경우, r이 큰 순서, c가 큰 순서대로 
# 상하좌우, 대각선 포함 8중 1방향 1칸 중 가장 가까운 산타를 향해.

# 산타
# 1~P 차례로, 기절or 탈락하지 않은 산타들만 / 루돌프에게 가까워지는 방향으로 상-r 우+c 하+r 좌-c 우선순위  중(r,c) 움직임
# 산타끼리 겹치거나 밖으로 움직일 수 없음/ 움직일 수 있는 곳이 없다면(가까워지는 방향) 움직이지 않는다

# 충돌
# 산타,루돌프 같은칸 충돌 1) 루돌프가 움직여서 2) 산타가 움직여서 
# 1) 해당 산타 C 점수 얻음, 산타는 c칸 밀려남                   C= 루돌프의 힘
# 2) 해당 산타 D 점수 얻음, 자기가 온 반대로 D칸 밀려남          D= 산타의 힘  
# 밀려난 위치가 게임판 밖이면 산타 탈락

# 밀려난 위치가 산타 간 겹치는 경우 " 상호작용 " 발생

# 상호 작용
# a 산타가 밀려난 위치에 b산타가 있는경우 b산타는 그방향으로 1칸 밀려남. b가 밀려난 위치에 c가있으면 ...최대 P 까지 줄줄이 밀려남

# 기절
# 산타는 루돌프와 충돌 후 기절 -> k턴에면 k+1턴까지기절, k+2 턴에 정상상태. 이동가능

# 게임 종료 조건
# M턴 이후 종료
# P명 다 탈락시 즉시 종료
# 턴이 끝날때 남아있는 산타들 1점씩 획득

#사이즈, 턴수, 산타 수, 루돌프가 움직일 때 점수, 산타가 움직일 때 점수  
# 3<= N <= 50 // 1<= M <= 1000 // 1<=P<=30 // (1<=C,D <=N) 
class Santa:
    def _init_(self,point,r,c,distance):
        self.point=point
        self.r=r
        self.c=c
        self.distance=distance

def calDistance(r1,c1,r2,c2):
    return (r1-r2)**2+(c1-c2)**2
    

N,M,P,C,D = map( int,input().split())
Rr,Rc = map(int,input().split())        # 루돌프 초기위치

santas= []
# p_distance = {}

for i in range(P):
    a,b,c = map(int,input().split())    # a=Pn , b=Sr, c=Sc
    #루돌프와의 거리계산 필요.
    santas.append(Santa(a, 0,b,c, calDistance(Rr,Rc,b,c)))

for m in range(M): #M회 턴 수행





